{"version":3,"sources":["sources.js","Loader.js","PostListPage.js","PostPage.js","App.js","index.js"],"names":["getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","posts","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getPostWithComments","_ref2","_callee2","id","post","_context2","concat","_x","createComment","_ref3","_callee3","body","postId","_context3","method","JSON","stringify","headers","content-type","_x2","_x3","createPost","_ref4","_callee4","title","creator","_context4","date","Date","_x4","_x5","_x6","Loader","react_default","createElement","className","PostListPage","state","isLoaded","postFormVisible","formValue","handleShowAddPost","_this","setState","prevState","cleanPostForm","handleChange","event","field","inputText","target","value","_objectSpread","defineProperty","handlePostSubmit","preventDefault","responsePosts","_this2","match","props","_this$state","_this$state$formValue","Fragment","onClick","type","onSubmit","onChange","name","placeholder","map","react_router_dom","to","path","slice","src_Loader","React","Component","PostPage","details","cleanCommentForm","handleCommentSubmit","params","_this$state$details","comments","length","rows","comment","App","react_router","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.89dd6a52.chunk.js","sourcesContent":["export const getPosts = async() => {\n  const response = await fetch('https://simple-blog-api.crew.red/posts');\n  const posts = await response.json();\n\n  return posts;\n};\n\nexport const getPostWithComments = async(id) => {\n  const response = await fetch(\n    `https://simple-blog-api.crew.red/posts/${id}?_embed=comments`\n  );\n  const post = await response.json();\n\n  return post;\n};\n\nexport const createComment = async(body, postId) => {\n  const response = await fetch('https://simple-blog-api.crew.red/comments', {\n    method: 'post',\n    body: JSON.stringify({ postId, body }),\n    headers: {\n      'content-type': 'application/json',\n    },\n  });\n  const post = await response.json();\n\n  return post;\n};\n\nexport const createPost = async(title, body, creator) => {\n  const response = await fetch('https://simple-blog-api.crew.red/posts', {\n    method: 'post',\n    body: JSON.stringify({\n      title,\n      body,\n      creator,\n      date: new Date(),\n    }),\n    headers: {\n      'content-type': 'application/json',\n    },\n  });\n  const post = await response.json();\n\n  return post;\n};\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"lds-hourglass\" />\n);\n\nexport default Loader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPosts, createPost } from './sources';\nimport Loader from './Loader';\n\nclass PostListPage extends React.Component {\n  state = {\n    posts: [],\n    isLoaded: false,\n    postFormVisible: false,\n    formValue: {\n      title: '',\n      body: '',\n      creator: '',\n    },\n  };\n\n  async componentDidMount() {\n    const responsePosts = await getPosts();\n\n    this.setState({\n      posts: responsePosts,\n      isLoaded: true,\n    });\n  }\n\n  handleShowAddPost = () => {\n    this.setState(prevState => ({\n      postFormVisible: !prevState.postFormVisible,\n    }));\n  };\n\n  cleanPostForm = () => {\n    this.setState({\n      formValue: {\n        title: '',\n        body: '',\n        creator: '',\n      },\n    });\n  };\n\n  handleChange = (event, field) => {\n    const inputText = event.target.value;\n\n    this.setState(prevState => ({\n      formValue: { ...prevState.formValue, [field]: inputText },\n    }));\n  };\n\n  handlePostSubmit = async(event, title, body, creator) => {\n    event.preventDefault();\n    if (title !== '' && body !== '' && creator !== '') {\n      await createPost(title, body, creator);\n      this.cleanPostForm();\n      const response = await getPosts();\n\n      this.setState({\n        posts: response,\n      });\n    }\n  };\n\n  render() {\n    const { match } = this.props;\n    const { posts, isLoaded, postFormVisible } = this.state;\n    const { title, body, creator } = this.state.formValue;\n\n    if (!isLoaded) {\n      return <Loader />;\n    }\n\n    return (\n      <>\n\n          <div className=\"submit-container\">\n            <button\n              className=\"show-form-button\"\n              onClick={this.handleShowAddPost}\n              type=\"button\"\n            >\n              {postFormVisible ? 'Hide form' : 'Show form'}\n            </button>\n            {postFormVisible && (\n              <form\n                onSubmit={\n                  event => this.handlePostSubmit(event, title, body, creator)\n                }\n              >\n                <input\n                  onChange={event => this.handleChange(event, 'creator')}\n                  value={this.state.formValue.creator}\n                  name=\"creator\"\n                  className=\"add-post-input add-name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                />\n                <input\n                  onChange={event => this.handleChange(event, 'title')}\n                  value={this.state.formValue.title}\n                  name=\"title\"\n                  className=\"add-post-input\"\n                  placeholder=\"Title\"\n                  type=\"text\"\n                />\n                <input\n                  onChange={event => this.handleChange(event, 'body')}\n                  value={this.state.formValue.body}\n                  name=\"body\"\n                  className=\"add-post-input\"\n                  placeholder=\"Write your post here\"\n                  type=\"text\"\n                />\n                <button className=\"add-post-submit\" type=\"submit\">\n                  Submit\n                </button>\n              </form>\n            )}\n          </div>\n          <ul className=\"post-container\">\n          {posts.map(post => (\n            <Link to={`${match.path}/${post.id}`} className=\"link\">\n              <li className=\"post-item\">\n                <p>\n                  <span className=\"topic\">{post.date.slice(0, 10)}</span>\n                </p>\n                <p>\n                  <span>creator: </span>\n                  <span>{post.creator}</span>\n                  <br />\n                  <span>Title: </span>\n                  <span>{post.title}</span>\n                </p>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default PostListPage;\n","import React from 'react';\nimport Loader from './Loader';\nimport { getPostWithComments, createComment } from './sources';\n\nclass PostPage extends React.Component {\n  state = {\n    details: [],\n    isLoaded: false,\n    value: '',\n  };\n\n  async componentDidMount() {\n    const response = await getPostWithComments(this.props.match.params.postId);\n\n    this.setState({\n      details: response,\n      isLoaded: true,\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  };\n\n  cleanCommentForm = () => {\n    this.setState({\n      value: '',\n    });\n  };\n\n  handleCommentSubmit = async(event, postId, value) => {\n    event.preventDefault();\n    if (value !== '') {\n      await createComment(value, postId);\n      this.cleanCommentForm();\n      const response = await getPostWithComments(postId);\n\n      this.setState({\n        details: response,\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      body,\n      creator,\n      date,\n      comments,\n      id,\n    } = this.state.details;\n    const { isLoaded } = this.state;\n\n    if (!isLoaded) {\n      return <Loader />;\n    }\n\n    return (\n      <>\n        <li className=\"post-item\">\n          <p>\n            <span>date: </span>\n            <span>{date}</span>\n            <br />\n            <span>creator: </span>\n            <span>{creator}</span>\n            <br />\n            <span>title: </span>\n            <span>{title}</span>\n            <br />\n            <span>body: </span>\n            <span>{body}</span>\n          </p>\n          <p>\n            <b>Comments</b>\n            (\n            {comments.length}\n            )\n          </p>\n          <p>\n            <form\n              onSubmit={\n                event => this.handleCommentSubmit(event, id, this.state.value)\n              }\n            >\n              <textarea\n                onChange={this.handleChange}\n                id=\"comment\"\n                name=\"Add-comment\"\n                rows=\"3\"\n                value={this.state.value}\n                placeholder=\"write your comment here\"\n              />\n              <button type=\"submit\">add comment</button>\n            </form>\n          </p>\n          {comments.map(comment => (\n            <p className =\"comment\">\n              {comment.body}\n            </p>\n          ))}\n        </li>\n      </>\n    );\n  }\n}\n\nexport default PostPage;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport PostListPage from './PostListPage';\nimport PostPage from './PostPage';\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <header className=\"header-container\">\n        <nav>\n          <Link className=\"basic_link\" to=\"/LatestPosts\">\n            Posts\n          </Link>\n        </nav>\n      </header>\n      <Switch>\n        <Route exact path=\"/\" component={PostListPage} />\n        <Route exact path=\"/LatestPosts\" component={PostListPage} />\n        <Route path=\"/LatestPosts/:postId\" component={PostPage} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}